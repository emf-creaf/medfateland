% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fordyn_scenario.R
\name{fordyn_scenario}
\alias{fordyn_scenario}
\title{Scenario of forest dynamics}
\usage{
fordyn_scenario(
  y,
  SpParams,
  meteo,
  volumeFunction,
  managementScenario,
  localControl = defaultControl(),
  dates = NULL,
  CO2ByYear = numeric(0),
  parallelize = FALSE,
  numCores = detectCores() - 1,
  chunk.size = NULL,
  progress = TRUE
)
}
\arguments{
\item{y}{An object of class \code{\link{sf}} with landscape information.
Management units should be defined in this object.}

\item{SpParams}{A data frame with species parameters (see \code{\link{SpParamsMED}}).}

\item{meteo}{Meteorology data (see \code{\link{fordyn_spatial}}).}

\item{volumeFunction}{A function accepting a forest object as input and returning the wood volume (m3/ha) corresponding to each tree cohort.}

\item{managementScenario}{A list defining the management scenario (see \code{\link{create_management_scenario}})}

\item{localControl}{A list of local model control parameters (see \code{\link{defaultControl}}).}

\item{dates}{A \code{\link{Date}} object with the days of the period to be simulated. If \code{NULL}, then the whole period of \code{meteo} is used.}

\item{CO2ByYear}{A named numeric vector with years as names and atmospheric CO2 concentration (in ppm) as values. Used to specify annual changes in CO2 concentration along the simulation (as an alternative to specifying daily values in \code{meteo}).}

\item{parallelize}{Boolean flag to try parallelization (will use all clusters minus one).}

\item{numCores}{Integer with the number of cores to be used for parallel computation.}

\item{chunk.size}{Integer indicating the size of chunks to be sent to different processes (by default, the number of spatial elements divided by the number of cores).}

\item{progress}{Boolean flag to display progress information for simulations.}
}
\description{
Evaluates forest dynamics over a landscape including climate and management scenarios
}
\examples{
\dontrun{
# Load example landscape data
data("examplepointslandscape")
  
# Transform example to 'sf' 
y = sp_to_sf(examplepointslandscape)

# Load example meteo data frame from package meteoland
data("examplemeteo")
  
#Prepare a two-year meteorological data with half precipitation during 
#the second year
meteo2001 = examplemeteo
meteo2002 = examplemeteo
meteo2002$Precipitation = meteo2002$Precipitation/2
row.names(meteo2002) = seq(as.Date("2002-01-01"), 
                         as.Date("2002-12-31"), by="day")
meteo_01_02 = rbind(meteo2001, meteo2002)
                         
# Load default medfate parameters
data("SpParamsMED")

# Creates default scenario with two management units
s = create_management_scenario(2)

# Modify thinning threshold of the arguments of management unit #1
s$managementUnits[[1]]$managementArgs$thinningThreshold = 15

# Subset 10 stands for computational simplicity
y = y[1:10, ]

# Assign two management units to stands
y$managementunit[1:3] = 1 
y$managementunit[4:10] = 2

res = fordyn_scenario(y, SpParamsMED, meteo_01_02, 
                      volumeFunction = NULL, managementScenario = s,
                      parallelize = TRUE)
}
}
