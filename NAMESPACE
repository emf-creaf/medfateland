import(sp)
import(sf)
import(ggplot2)
import(spdep)
import(methods)
import(meteoland)
import(medfate)
import(shiny)
importFrom(Rcpp, evalCpp)
importFrom("stats", "var")
importFrom("utils", "setTxtProgressBar", "txtProgressBar")
importFrom("parallel", "detectCores", "makeCluster", "stopCluster", "clusterExport", "clusterApply")
export(buildWatershedTopography,
       createManagementScenario,
       defaultWatershedCorrectionFactors,
       DistributedWatershed,
       spwbspatial, growthspatial, fordynspatial,
       spwbspatial_day, growthspatial_day,
       shinyplotland,
       SpatialPointsLandscape, SpatialPixelsLandscape, SpatialGridLandscape,
       spwbland, growthland,
       fordynscenario,
       updateState)

useDynLib(medfateland, .registration = TRUE)

exportClasses(SpatialPointsLandscape, SpatialGridLandscape, SpatialPixelsLandscape, DistributedWatershed)
exportMethods("[", show, getLandscapeVariable, getLandscapeLayer, 
              spatialForestSummary, spatialSoilSummary, spatialModelInputSummary,
              plot, spplot, head, tail)

S3method(plot,spwbland)
S3method(plot,growthland)

S3method(plot,summaryspatial)

S3method(summary,spwbspatial)
S3method(summary,growthspatial)
S3method(summary,fordynspatial)
